plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}


version = '1.0-SNAPSHOT'
group = 'radon.jujutsu_kaisen'
archivesBaseName = 'jujutsu_kaisen'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

mixin {
    add sourceSets.main, 'mixins.jujutsu_kaisen.refmap.json'
    config 'mixins.jujutsu_kaisen.json'
}

minecraft {
    mappings channel: 'parchment', version: '2023.06.26-1.19.4'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'jujutsu_kaisen'
            args '--username', 'Dev####'

            mods {
                jujutsu_kaisen {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'jujutsu_kaisen'
            
            mods {
                jujutsu_kaisen {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'jujutsu_kaisen'

            mods {
                jujutsu_kaisen {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'jujutsu_kaisen', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                jujutsu_kaisen {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven { url "https://cursemaven.com" }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.4-45.1.0'
    implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.19.4:4.2')
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    runtimeOnly fg.deobf('curse.maven:spark-361579:4505309')
    runtimeOnly fg.deobf('curse.maven:rubidium-574856:4448053')
    runtimeOnly fg.deobf('curse.maven:oculus-581495:4451142')
}

jar {
    manifest {
        attributes([
                "Specification-Title": "Jujutsu Kaisen",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
